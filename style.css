// Function to show/hide the KJ information section based on establishment type
function toggleKJSection() {
    const establishmentType = document.querySelector('input[name="establishmentType"]:checked')?.value;
    const kjInfoSection = document.getElementById('kjInfoSection');
    if (establishmentType === 'Karaoke Night') {
        kjInfoSection.style.display = 'block';
    } else {
        kjInfoSection.style.display = 'none';
        // Clear inputs when the section is hidden
        document.getElementById('kjName').value = '';
        document.getElementById('kjSocial').value = '';
        document.getElementById('kjContact').value = '';
    }
}

// Function to add a new day/time slot for karaoke
function addTimeSlot() {
    const container = document.getElementById('timesOfOperation');
    const newGroup = document.createElement('div');
    newGroup.className = 'day-time-group';
    newGroup.innerHTML = `
        <select name="day">
            <option value="" disabled selected>Select Day</option>
            <option value="Monday">Monday</option>
            <option value="Tuesday">Tuesday</option>
            <option value="Wednesday">Wednesday</option>
            <option value="Thursday">Thursday</option>
            <option value="Friday">Friday</option>
            <option value="Saturday">Saturday</option>
            <option value="Sunday">Sunday</option>
        </select>
        <input type="time" name="startTime" placeholder="Start Time">
        to
        <input type="time" name="endTime" placeholder="End Time">
        <button type="button" class="remove-btn" onclick="removeTimeSlot(this)">Remove</button>
    `;
    container.appendChild(newGroup);
    // Remove the "Add More" button from the previous group
    const addBtn = container.lastElementChild.previousElementSibling?.querySelector('.add-btn');
    if (addBtn) {
        addBtn.remove();
    }
}

// Function to remove a day/time slot
function removeTimeSlot(btn) {
    const container = document.getElementById('timesOfOperation');
    const groupToRemove = btn.parentNode;
    container.removeChild(groupToRemove);
    // If the last remaining group is removed, re-add a fresh one.
    if (container.children.length === 0) {
        addTimeSlot();
    }
    // If a button is removed and it was not the last one, check if the previous one has an 'Add More' button
    if (container.children.length > 0) {
      const lastGroup = container.lastElementChild;
      if (!lastGroup.querySelector('.add-btn')) {
        const addBtn = document.createElement('button');
        addBtn.type = 'button';
        addBtn.className = 'add-btn';
        addBtn.textContent = 'Add More';
        addBtn.onclick = addTimeSlot;
        lastGroup.appendChild(addBtn);
      }
    }
}

// Function to show/hide the public stage question based on room type
function togglePublicStage(radio) {
    const publicStageQuestion = document.getElementById('publicStageQuestion');
    if (radio.value === 'Public' || radio.value === 'Both') {
        publicStageQuestion.style.display = 'block';
    } else {
        publicStageQuestion.style.display = 'none';
        const radios = publicStageQuestion.querySelectorAll('input[type="radio"]');
        radios.forEach(r => r.checked = false);
    }
}

document.getElementById('karaokeForm').addEventListener('submit', function(event) {
    event.preventDefault();

    function getCheckedValues(name) {
        return Array.from(document.querySelectorAll(`input[name="${name}"]:checked`))
                    .map(checkbox => checkbox.value);
    }

    function getRadioValue(name) {
        const radio = document.querySelector(`input[name="${name}"]:checked`);
        return radio ? radio.value : 'Not specified';
    }

    // Collect karaoke times
    const karaokeTimes = [];
    document.querySelectorAll('.day-time-group').forEach(group => {
        const day = group.querySelector('select[name="day"]').value;
        const startTime = group.querySelector('input[name="startTime"]').value;
        const endTime = group.querySelector('input[name="endTime"]').value;
        if (day && startTime && endTime) {
            karaokeTimes.push({ day, startTime, endTime });
        }
    });

    const formData = {
        establishmentName: document.getElementById('establishmentName').value,
        establishmentType: getRadioValue('establishmentType'),
        streetAddress: document.getElementById('streetAddress').value,
        city: document.getElementById('city').value,
        state: document.getElementById('state').value,
        zipCode: document.getElementById('zipCode').value,
        email: document.getElementById('email').value,
        telephone: document.getElementById('telephone').value,
        social: document.getElementById('social').value,
        karaokeTimes: karaokeTimes,
        genres: getCheckedValues('genres').join(', ') || 'None selected',
        languages: getCheckedValues('languages').join(', ') || 'None selected',
        roomType: getRadioValue('roomType'),
        publicStageType: getRadioValue('publicStageType')
    };
    
    // Add KJ info only if applicable
    if (formData.establishmentType === 'Karaoke Night') {
        formData.kjInfo = {
            name: document.getElementById('kjName').value,
            social: document.getElementById('kjSocial').value,
            contact: document.getElementById('kjContact').value
        };
    }

    let confirmationMessage = "Please review your information before submitting:\n\n";
    confirmationMessage += `Establishment Name: ${formData.establishmentName}\n`;
    confirmationMessage += `Establishment Type: ${formData.establishmentType}\n`;

    if (formData.establishmentType === 'Karaoke Night' && formData.kjInfo) {
        confirmationMessage += `KJ Name: ${formData.kjInfo.name || 'Not provided'}\n`;
        confirmationMessage += `KJ Social: ${formData.kjInfo.social || 'Not provided'}\n`;
        confirmationMessage += `KJ Contact: ${formData.kjInfo.contact || 'Not provided'}\n`;
    }

    confirmationMessage += `\nStreet Address: ${formData.streetAddress}\n`;
    confirmationMessage += `City: ${formData.city}\n`;
    confirmationMessage += `State: ${formData.state}\n`;
    confirmationMessage += `Zip Code: ${formData.zipCode}\n`;
    confirmationMessage += `Email: ${formData.email}\n`;
    confirmationMessage += `Telephone: ${formData.telephone || 'Not provided'}\n`;
    confirmationMessage += `Social Media: ${formData.social || 'Not provided'}\n\n`;

    confirmationMessage += "Karaoke Times:\n";
    if (formData.karaokeTimes.length > 0) {
        formData.karaokeTimes.forEach(time => {
            confirmationMessage += `  - ${time.day}: ${time.startTime} to ${time.endTime}\n`;
        });
    } else {
        confirmationMessage += "  - None specified\n";
    }

    confirmationMessage += `\nGenres: ${formData.genres}\n`;
    confirmationMessage += `Languages: ${formData.languages}\n\n`;
    confirmationMessage += `Room Type: ${formData.roomType}\n`;

    if (formData.roomType === 'Public' || formData.roomType === 'Both') {
        confirmationMessage += `Public Stage Type: ${formData.publicStageType}\n`;
    }

    const userConfirmation = confirm(confirmationMessage);

    if (userConfirmation) {
        console.log('Form data confirmed and submitted:', formData);
        alert('Thank you! Your information has been submitted.');
        this.reset();
    } else {
        console.log('Submission canceled by user.');
    }
});

// Initial call to set up the form state on page load
toggleKJSection();